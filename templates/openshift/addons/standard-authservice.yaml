apiVersion: v1
kind: Template
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: enmasse
    name: keycloak-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${KEYCLOAK_STORAGE_CAPACITY}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
    name: keycloak
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: enmasse
          name: keycloak
      spec:
        containers:
        - env:
          - name: KEYCLOAK_USER
            valueFrom:
              secretKeyRef:
                key: admin.username
                name: ${KEYCLOAK_SECRET_NAME}
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin.password
                name: ${KEYCLOAK_SECRET_NAME}
          image: ${STANDARD_AUTHSERVICE_IMAGE}
          livenessProbe:
            httpGet:
              path: /
              port: https
              scheme: HTTPS
            initialDelaySeconds: 120
          name: keycloak
          ports:
          - containerPort: 5671
            name: amqps
          - containerPort: 8443
            name: https
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 1Gi
          volumeMounts:
          - mountPath: /opt/eap/standalone/data
            name: keycloak-persistence
            readOnly: false
          - mountPath: /opt/eap/standalone/cert
            name: ${STANDARD_AUTHSERVICE_SECRET_NAME}
            readOnly: false
        volumes:
        - name: ${STANDARD_AUTHSERVICE_SECRET_NAME}
          secret:
            secretName: ${STANDARD_AUTHSERVICE_SECRET_NAME}
        - name: keycloak-persistence
          persistentVolumeClaim:
            claimName: keycloak-pvc
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
    name: keycloak-controller
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: enmasse
          name: keycloak-controller
      spec:
        containers:
        - env:
          - name: STANDARD_AUTHSERVICE_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin.username
                name: ${KEYCLOAK_SECRET_NAME}
          - name: STANDARD_AUTHSERVICE_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin.password
                name: ${KEYCLOAK_SECRET_NAME}
          - name: STANDARD_AUTHSERVICE_CA_CERT
            valueFrom:
              secretKeyRef:
                key: tls.crt
                name: ${STANDARD_AUTHSERVICE_SECRET_NAME}
          image: ${KEYCLOAK_CONTROLLER_IMAGE}
          name: keycloak-controller
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 256Mi
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: enmasse
    name: standard-authservice
  spec:
    ports:
    - name: amqps
      port: 5671
      protocol: TCP
      targetPort: amqps
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
    selector:
      name: keycloak
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: enmasse
    name: keycloak
  spec:
    host: ${KEYCLOAK_ROUTE_HOSTNAME}
    port:
      targetPort: https
    tls:
      termination: passthrough
    to:
      kind: Service
      name: standard-authservice
parameters:
- description: The docker image to use for the 'standard' auth service
  name: STANDARD_AUTHSERVICE_IMAGE
  value: docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-auth-openshift:dev
- description: The secret where keycloak credentials are stored
  name: KEYCLOAK_SECRET_NAME
  value: keycloak-credentials
- description: The docker image to use for the keycloak controller
  name: KEYCLOAK_CONTROLLER_IMAGE
  value: docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-auth-controller-openshift:dev
- description: The secret containing the tls certificate and key
  name: STANDARD_AUTHSERVICE_SECRET_NAME
  value: standard-authservice-cert
- description: The hostname to use for the public keycloak route
  name: KEYCLOAK_ROUTE_HOSTNAME
  value: ''
- description: The amount of storage to request for Keycloak data
  name: KEYCLOAK_STORAGE_CAPACITY
  value: 2Gi
