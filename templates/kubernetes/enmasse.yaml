apiVersion: v1
items:
- apiVersion: v1
  data:
    brokered-space-infra.json: '{"apiVersion": "v1", "kind": "Template", "metadata":
      {"labels": {"app": "enmasse"}, "name": "brokered-space-infra"}, "objects": [{"apiVersion":
      "v1", "data": {"tls.crt": "${AUTHENTICATION_SERVICE_CA_CERT}"}, "kind": "Secret",
      "metadata": {"name": "authservice-ca"}}, {"apiVersion": "v1", "data": {"tls.crt":
      "${ADDRESS_CONTROLLER_CA_CERT}"}, "kind": "Secret", "metadata": {"name": "address-controller-ca"}},
      {"apiVersion": "v1", "data": {"hawkular-openshift-agent": "{\"endpoints\": [{\"collection_interval\":
      \"60s\", \"metrics\": [{\"id\": \"broker.threadCount\", \"name\": \"java.lang:type=Threading#ThreadCount\",
      \"tags\": {\"messagingComponent\": \"broker\", \"messagingMetricType\": \"threadCount\"},
      \"type\": \"counter\"}, {\"id\": \"broker.memoryHeapUsage\", \"name\": \"java.lang:type=Memory#HeapMemoryUsage#used\",
      \"tags\": {\"messagingComponent\": \"broker\", \"messagingMetricType\": \"heapUsage\"},
      \"type\": \"gauge\"}, {\"description\": \"Queue depth for ${address}\", \"id\":
      \"${address}.${queue}.${broker}.queueDepth\", \"name\": \"org.apache.activemq.artemis:address=*,broker=*,component=addresses,queue=*,routing-type=*,subcomponent=queues#MessageCount\",
      \"tags\": {\"messagingAddress\": \"${address}\", \"messagingBroker\": \"{broker}\",
      \"messagingMetricType\": \"queueDepth\", \"messagingQueue\": \"${queue}\"},
      \"type\": \"gauge\"}, {\"description\": \"Number of consumers for ${address}\",
      \"id\": \"${address}.${queue}.${broker}.numConsumers\", \"name\": \"org.apache.activemq.artemis:address=*,broker=*,component=addresses,queue=*,routing-type=*,subcomponent=queues#ConsumerCount\",
      \"tags\": {\"messagingAddress\": \"${address}\", \"messagingBroker\": \"{broker}\",
      \"messagingMetricType\": \"numConsumers\", \"messagingQueue\": \"${queue}\"},
      \"type\": \"gauge\"}], \"path\": \"/jolokia/\", \"port\": 8161, \"protocol\":
      \"http\", \"type\": \"jolokia\"}]}"}, "kind": "ConfigMap", "metadata": {"name":
      "hawkular-broker-config"}}, {"apiVersion": "v1", "kind": "PersistentVolumeClaim",
      "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"}, "labels":
      {"app": "enmasse"}, "name": "broker-data"}, "spec": {"accessModes": ["ReadWriteOnce"],
      "resources": {"requests": {"storage": "${STORAGE_CAPACITY}"}}}}, {"apiVersion":
      "extensions/v1beta1", "kind": "Deployment", "metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "io.enmasse.certSecretName": "broker-internal-cert"}, "labels":
      {"app": "enmasse", "role": "broker"}, "name": "broker"}, "spec": {"replicas":
      1, "template": {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse", "name": "broker", "role": "broker"}}, "spec": {"containers":
      [{"env": [{"name": "ADDRESS_SPACE_TYPE", "value": "brokered"}, {"name": "CERT_DIR",
      "value": "/etc/enmasse-certs"}, {"name": "AUTHENTICATION_SERVICE_HOST", "value":
      "${AUTHENTICATION_SERVICE_HOST}"}, {"name": "AUTHENTICATION_SERVICE_PORT", "value":
      "${AUTHENTICATION_SERVICE_PORT}"}, {"name": "AUTHENTICATION_SERVICE_CLIENT_SECRET",
      "value": "${AUTHENTICATION_SERVICE_CLIENT_SECRET}"}, {"name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST",
      "value": "${AUTHENTICATION_SERVICE_SASL_INIT_HOST}"}], "image": "${BROKER_IMAGE}",
      "livenessProbe": {"exec": {"command": ["sh", "-c", "$ARTEMIS_HOME/bin/probe.sh"]},
      "initialDelaySeconds": 120}, "name": "broker", "ports": [{"containerPort": 5672,
      "name": "amqp"}, {"containerPort": 5671, "name": "amqps"}, {"containerPort":
      61616, "name": "core"}, {"containerPort": 61613, "name": "openwire"}, {"containerPort":
      55671, "name": "amqps-normal"}, {"containerPort": 8161, "name": "jolokia"}],
      "readinessProbe": {"exec": {"command": ["sh", "-c", "$ARTEMIS_HOME/bin/probe.sh"]},
      "initialDelaySeconds": 10}, "volumeMounts": [{"mountPath": "/var/run/artemis",
      "name": "data", "readOnly": false}, {"mountPath": "/etc/enmasse-certs", "name":
      "broker-internal-cert", "readOnly": true}, {"mountPath": "/etc/external-certs",
      "name": "external-cert", "readOnly": true}, {"mountPath": "/etc/authservice-ca",
      "name": "authservice-ca", "readOnly": true}]}], "volumes": [{"name": "data",
      "persistentVolumeClaim": {"claimName": "broker-data"}}, {"configMap": {"name":
      "hawkular-broker-config"}, "name": "hawkular-openshift-agent"}, {"name": "broker-internal-cert",
      "secret": {"secretName": "broker-internal-cert"}}, {"name": "authservice-ca",
      "secret": {"secretName": "authservice-ca"}}, {"name": "external-cert", "secret":
      {"secretName": "${MESSAGING_SECRET}"}}]}}}}, {"apiVersion": "v1", "kind": "Service",
      "metadata": {"labels": {"app": "enmasse"}, "name": "broker"}, "spec": {"ports":
      [{"name": "amqps-normal", "port": 55671, "targetPort": "amqps-normal"}], "selector":
      {"role": "broker"}}}, {"apiVersion": "v1", "kind": "Service", "metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}", "io.enmasse.endpointPort": "amqps"}, "labels":
      {"app": "enmasse"}, "name": "messaging"}, "spec": {"ports": [{"name": "amqp",
      "port": 5672, "targetPort": "amqp"}, {"name": "amqps", "port": 5671, "targetPort":
      "amqps"}, {"name": "core", "port": 61616, "targetPort": "core"}, {"name": "openwire",
      "port": 61613, "targetPort": "openwire"}], "selector": {"role": "broker"}}},
      {"apiVersion": "extensions/v1beta1", "kind": "Deployment", "metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}", "io.enmasse.certSecretName": "agent-internal-cert"},
      "labels": {"app": "enmasse", "role": "agent"}, "name": "agent"}, "spec": {"replicas":
      1, "template": {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse", "name": "agent", "role": "agent"}}, "spec": {"containers":
      [{"env": [{"name": "ADDRESS_SPACE", "value": "${ADDRESS_SPACE}"}, {"name": "ADDRESS_SPACE_TYPE",
      "value": "brokered"}, {"name": "ADDRESS_SPACE_SERVICE_HOST", "value": "${ADDRESS_SPACE_SERVICE_HOST}"},
      {"name": "CERT_DIR", "value": "/etc/enmasse-certs"}, {"name": "CONSOLE_CERT_DIR",
      "value": "/etc/console-certs"}, {"name": "ADDRESS_CONTROLLER_CA", "value": "/opt/agent/address-controller-ca/tls.crt"},
      {"name": "MESSAGING_CERT", "value": "/opt/agent/messaging-cert/tls.crt"}, {"name":
      "AUTHENTICATION_SERVICE_HOST", "value": "${AUTHENTICATION_SERVICE_HOST}"}, {"name":
      "AUTHENTICATION_SERVICE_PORT", "value": "${AUTHENTICATION_SERVICE_PORT}"}, {"name":
      "AUTHENTICATION_SERVICE_CLIENT_SECRET", "value": "${AUTHENTICATION_SERVICE_CLIENT_SECRET}"},
      {"name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST", "value": "${AUTHENTICATION_SERVICE_SASL_INIT_HOST}"}],
      "image": "${AGENT_IMAGE}", "livenessProbe": {"httpGet": {"path": "/probe", "port":
      "https", "scheme": "HTTPS"}}, "name": "agent", "ports": [{"containerPort": 8080,
      "name": "https"}], "readinessProbe": {"httpGet": {"path": "/probe", "port":
      "https", "scheme": "HTTPS"}}, "volumeMounts": [{"mountPath": "/opt/agent/authservice-ca",
      "name": "authservice-ca", "readOnly": true}, {"mountPath": "/etc/console-certs",
      "name": "console-external-cert", "readOnly": true}, {"mountPath": "/etc/enmasse-certs",
      "name": "agent-internal-cert", "readOnly": true}, {"mountPath": "/opt/agent/address-controller-ca",
      "name": "address-controller-ca", "readOnly": true}, {"mountPath": "/opt/agent/messaging-cert",
      "name": "messaging-cert", "readOnly": true}]}], "serviceAccount": "${ADDRESS_SPACE_ADMIN_SA}",
      "volumes": [{"name": "authservice-ca", "secret": {"secretName": "authservice-ca"}},
      {"name": "console-external-cert", "secret": {"secretName": "${CONSOLE_SECRET}"}},
      {"name": "agent-internal-cert", "secret": {"secretName": "agent-internal-cert"}},
      {"name": "address-controller-ca", "secret": {"secretName": "address-controller-ca"}},
      {"name": "messaging-cert", "secret": {"secretName": "external-certs-messaging"}}]}}}},
      {"apiVersion": "v1", "kind": "Service", "metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "io.enmasse.endpointPort": "https"}, "labels": {"app": "enmasse"},
      "name": "console"}, "spec": {"ports": [{"name": "https", "port": 8081, "targetPort":
      8080}], "selector": {"role": "agent"}}}], "parameters": [{"description": "Hostname
      where API server can be reached", "name": "ADDRESS_SPACE_SERVICE_HOST", "value":
      ""}, {"description": "The docker image to use for the message broker", "name":
      "BROKER_IMAGE", "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-broker-openshift:dev"},
      {"description": "The docker image to use for the enmasse agent", "name": "AGENT_IMAGE",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-agent-openshift:dev"},
      {"description": "Storage capacity required for volume claims", "name": "STORAGE_CAPACITY",
      "value": "2Gi"}, {"description": "The address space this infrastructure is deployed
      for", "name": "ADDRESS_SPACE", "required": true}, {"description": "Certificate
      to be used for public messaging service", "name": "MESSAGING_SECRET", "required":
      true}, {"description": "Certificate to be used for public console service",
      "name": "CONSOLE_SECRET", "required": true}, {"description": "The hostname of
      the authentication service used by this address space", "name": "AUTHENTICATION_SERVICE_HOST",
      "required": true}, {"description": "The port of the authentication service used
      by this address space", "name": "AUTHENTICATION_SERVICE_PORT", "required": true},
      {"description": "The CA cert to use for validating authentication service cert",
      "name": "AUTHENTICATION_SERVICE_CA_CERT", "required": true}, {"description":
      "The client cert to use as identity against authentication service", "name":
      "AUTHENTICATION_SERVICE_CLIENT_SECRET"}, {"description": "The hostname to use
      in sasl init", "name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST"}, {"description":
      "The CA cert to use for validating address controller identity", "name": "ADDRESS_CONTROLLER_CA_CERT"},
      {"description": "The service account with address space admin privileges", "name":
      "ADDRESS_SPACE_ADMIN_SA", "value": "address-space-admin"}]}'
    queue-inmemory.json: '{"apiVersion": "v1", "kind": "Template", "metadata": {"labels":
      {"app": "enmasse"}, "name": "queue-inmemory"}, "objects": [{"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "cluster_id": "${CLUSTER_ID}", "io.enmasse.certSecretName": "broker-internal-cert"},
      "labels": {"app": "enmasse"}, "name": "${NAME}"}, "spec": {"replicas": 1, "template":
      {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}", "cluster_id":
      "${CLUSTER_ID}"}, "labels": {"app": "enmasse", "name": "${NAME}", "role": "broker"}},
      "spec": {"containers": [{"env": [{"name": "QUEUE_NAME", "value": "${ADDRESS}"},
      {"name": "CLUSTER_ID", "value": "${CLUSTER_ID}"}, {"name": "CERT_DIR", "value":
      "/etc/enmasse-certs"}], "image": "${BROKER_REPO}", "lifecycle": {"preStop":
      {"exec": {"command": ["/shutdown-hook/shutdown-hook.sh"]}}}, "livenessProbe":
      {"exec": {"command": ["sh", "-c", "$ARTEMIS_HOME/bin/probe.sh"]}, "initialDelaySeconds":
      120}, "name": "broker", "ports": [{"containerPort": 5673, "name": "amqp"}, {"containerPort":
      8161, "name": "jolokia"}], "readinessProbe": {"exec": {"command": ["sh", "-c",
      "$ARTEMIS_HOME/bin/probe.sh"]}, "initialDelaySeconds": 10}, "volumeMounts":
      [{"mountPath": "/var/run/artemis", "name": "vol-${NAME}", "readOnly": false},
      {"mountPath": "/etc/enmasse-certs", "name": "broker-internal-cert", "readOnly":
      true}, {"mountPath": "/etc/authservice-ca", "name": "authservice-ca", "readOnly":
      true}]}], "volumes": [{"emptyDir": { }, "name": "vol-${NAME}"}, {"name": "ssl-certs",
      "secret": {"secretName": "${COLOCATED_ROUTER_SECRET}"}}, {"name": "authservice-ca",
      "secret": {"secretName": "authservice-ca"}}, {"name": "address-controller-ca",
      "secret": {"secretName": "address-controller-ca"}}, {"name": "broker-internal-cert",
      "secret": {"secretName": "broker-internal-cert"}}, {"configMap": {"name": "hawkular-broker-config"},
      "name": "hawkular-openshift-agent"}]}}}}], "parameters": [{"description": "Storage
      capacity required for volume claims", "name": "STORAGE_CAPACITY", "value": "2Gi"},
      {"description": "The docker image to use for the message broker", "name": "BROKER_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-broker-openshift:dev"},
      {"description": "The default image to use as topic forwarder", "name": "TOPIC_FORWARDER_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-topicforwarder-openshift:dev"},
      {"description": "The image to use for the router", "name": "ROUTER_REPO", "value":
      "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-interconnect-openshift:dev"},
      {"description": "The link capacity setting for router", "name": "ROUTER_LINK_CAPACITY",
      "value": "50"}, {"description": "A valid addressSpace name for the address Space",
      "name": "ADDRESS_SPACE", "required": true}, {"description": "A valid name for
      the deployment", "name": "NAME", "required": true}, {"description": "A valid
      group id for the deployment", "name": "CLUSTER_ID", "required": true}, {"description":
      "The address to use for the queue", "name": "ADDRESS", "value": ""}, {"description":
      "Name of secret containing router key and certificate", "name": "COLOCATED_ROUTER_SECRET",
      "required": true}, {"description": "The hostname of the authentication service
      used by this address space", "name": "AUTHENTICATION_SERVICE_HOST", "required":
      true}, {"description": "The port of the authentication service used by this
      address space", "name": "AUTHENTICATION_SERVICE_PORT", "required": true}, {"description":
      "The CA cert to use for validating authentication service cert", "name": "AUTHENTICATION_SERVICE_CA_CERT",
      "required": true}, {"description": "The client cert to use as identity against
      authentication service", "name": "AUTHENTICATION_SERVICE_CLIENT_SECRET"}, {"description":
      "The hostname to use in sasl init", "name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST"}]}'
    queue-persisted.json: '{"apiVersion": "v1", "kind": "Template", "metadata": {"labels":
      {"app": "enmasse"}, "name": "queue-persisted"}, "objects": [{"apiVersion": "v1",
      "kind": "PersistentVolumeClaim", "metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse"},
      "name": "pvc-${NAME}"}, "spec": {"accessModes": ["ReadWriteMany"], "resources":
      {"requests": {"storage": "${STORAGE_CAPACITY}"}}}}, {"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "cluster_id": "${CLUSTER_ID}", "io.enmasse.certSecretName": "broker-internal-cert"},
      "labels": {"app": "enmasse"}, "name": "${NAME}"}, "spec": {"replicas": 1, "template":
      {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}", "cluster_id":
      "${CLUSTER_ID}"}, "labels": {"app": "enmasse", "name": "${NAME}", "role": "broker"}},
      "spec": {"containers": [{"env": [{"name": "QUEUE_NAME", "value": "${ADDRESS}"},
      {"name": "CLUSTER_ID", "value": "${CLUSTER_ID}"}, {"name": "CERT_DIR", "value":
      "/etc/enmasse-certs"}], "image": "${BROKER_REPO}", "lifecycle": {"preStop":
      {"exec": {"command": ["/shutdown-hook/shutdown-hook.sh"]}}}, "livenessProbe":
      {"exec": {"command": ["sh", "-c", "$ARTEMIS_HOME/bin/probe.sh"]}, "initialDelaySeconds":
      120}, "name": "broker", "ports": [{"containerPort": 5673, "name": "amqp"}, {"containerPort":
      8161, "name": "jolokia"}], "readinessProbe": {"exec": {"command": ["sh", "-c",
      "$ARTEMIS_HOME/bin/probe.sh"]}, "initialDelaySeconds": 10}, "volumeMounts":
      [{"mountPath": "/var/run/artemis", "name": "vol-${NAME}", "readOnly": false},
      {"mountPath": "/etc/enmasse-certs", "name": "broker-internal-cert", "readOnly":
      true}, {"mountPath": "/etc/authservice-ca", "name": "authservice-ca", "readOnly":
      true}]}], "volumes": [{"name": "vol-${NAME}", "persistentVolumeClaim": {"claimName":
      "pvc-${NAME}"}}, {"name": "ssl-certs", "secret": {"secretName": "${COLOCATED_ROUTER_SECRET}"}},
      {"name": "authservice-ca", "secret": {"secretName": "authservice-ca"}}, {"name":
      "address-controller-ca", "secret": {"secretName": "address-controller-ca"}},
      {"name": "broker-internal-cert", "secret": {"secretName": "broker-internal-cert"}},
      {"configMap": {"name": "hawkular-broker-config"}, "name": "hawkular-openshift-agent"}]}}}}],
      "parameters": [{"description": "Storage capacity required for volume claims",
      "name": "STORAGE_CAPACITY", "value": "2Gi"}, {"description": "The docker image
      to use for the message broker", "name": "BROKER_REPO", "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-broker-openshift:dev"},
      {"description": "The default image to use as topic forwarder", "name": "TOPIC_FORWARDER_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-topicforwarder-openshift:dev"},
      {"description": "The image to use for the router", "name": "ROUTER_REPO", "value":
      "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-interconnect-openshift:dev"},
      {"description": "The link capacity setting for router", "name": "ROUTER_LINK_CAPACITY",
      "value": "50"}, {"description": "A valid addressSpace name for the address Space",
      "name": "ADDRESS_SPACE", "required": true}, {"description": "A valid name for
      the deployment", "name": "NAME", "required": true}, {"description": "A valid
      group id for the deployment", "name": "CLUSTER_ID", "required": true}, {"description":
      "The address to use for the queue", "name": "ADDRESS", "value": ""}, {"description":
      "Name of secret containing router key and certificate", "name": "COLOCATED_ROUTER_SECRET",
      "required": true}, {"description": "The hostname of the authentication service
      used by this address space", "name": "AUTHENTICATION_SERVICE_HOST", "required":
      true}, {"description": "The port of the authentication service used by this
      address space", "name": "AUTHENTICATION_SERVICE_PORT", "required": true}, {"description":
      "The CA cert to use for validating authentication service cert", "name": "AUTHENTICATION_SERVICE_CA_CERT",
      "required": true}, {"description": "The client cert to use as identity against
      authentication service", "name": "AUTHENTICATION_SERVICE_CLIENT_SECRET"}, {"description":
      "The hostname to use in sasl init", "name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST"}]}'
    standard-space-infra.json: '{"apiVersion": "v1", "kind": "Template", "metadata":
      {"labels": {"app": "enmasse"}, "name": "standard-space-infra"}, "objects": [{"apiVersion":
      "v1", "kind": "Service", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse"}, "name": "ragent"}, "spec": {"ports": [{"name":
      "amqp", "port": 5671, "targetPort": 55671}], "selector": {"name": "admin"}}},
      {"apiVersion": "v1", "kind": "Service", "metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse"}, "name": "configuration"},
      "spec": {"ports": [{"name": "amqps", "port": 5671}], "selector": {"name": "admin"}}},
      {"apiVersion": "v1", "kind": "Service", "metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse"}, "name": "queue-scheduler"},
      "spec": {"ports": [{"name": "amqp", "port": 5672, "targetPort": 55667}], "selector":
      {"name": "admin"}}}, {"apiVersion": "v1", "kind": "Service", "metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}", "io.enmasse.endpointPort": "https"}, "labels":
      {"app": "enmasse"}, "name": "console"}, "spec": {"ports": [{"name": "https",
      "port": 8081, "targetPort": 8080}], "selector": {"name": "admin"}}}, {"apiVersion":
      "v1", "kind": "Service", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "io.enmasse.endpointPort": "amqps", "service.alpha.openshift.io/dependencies":
      "[{\"kind\": \"Service\", \"name\": \"queue-scheduler\", \"namespace\": \"\"},
      {\"kind\": \"Service\", \"name\": \"configuration\", \"namespace\": \"\"}, {\"kind\":
      \"Service\", \"name\": \"ragent\", \"namespace\": \"\"}, {\"kind\": \"Service\",
      \"name\": \"console\", \"namespace\": \"\"}, {\"kind\": \"Service\", \"name\":
      \"subscription\", \"namespace\": \"\"}, {\"kind\": \"Service\", \"name\": \"mqtt\",
      \"namespace\": \"\"}]", "service.alpha.openshift.io/infrastructure": "true"},
      "labels": {"app": "enmasse"}, "name": "messaging"}, "spec": {"ports": [{"name":
      "amqp", "port": 5672, "protocol": "TCP", "targetPort": 5672}, {"name": "amqps",
      "port": 5671, "protocol": "TCP", "targetPort": 5671}, {"name": "amqps-normal",
      "port": 55671, "protocol": "TCP", "targetPort": "amqps-normal"}, {"name": "amqps-broker",
      "port": 56671, "protocol": "TCP", "targetPort": "amqps-broker"}, {"name": "inter-router",
      "port": 55672, "protocol": "TCP", "targetPort": 55672}], "selector": {"capability":
      "router"}}}, {"apiVersion": "v1", "kind": "Service", "metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse"}, "name":
      "subscription"}, "spec": {"ports": [{"name": "amqp", "port": 5672, "protocol":
      "TCP", "targetPort": 5672}], "selector": {"name": "subserv"}}}, {"apiVersion":
      "v1", "kind": "Service", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "io.enmasse.endpointPort": "secure-mqtt"}, "labels": {"app": "enmasse"}, "name":
      "mqtt"}, "spec": {"ports": [{"name": "mqtt", "port": 1883, "protocol": "TCP",
      "targetPort": 1883}, {"name": "secure-mqtt", "port": 8883, "protocol": "TCP",
      "targetPort": 8883}], "selector": {"name": "mqtt-gateway"}, "type": "ClusterIP"}},
      {"apiVersion": "extensions/v1beta1", "kind": "Deployment", "metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}", "io.enmasse.certSecretName": "router-internal-cert"},
      "labels": {"app": "enmasse", "name": "qdrouterd"}, "name": "qdrouterd"}, "spec":
      {"replicas": 1, "template": {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse", "capability": "router", "name": "qdrouterd"}},
      "spec": {"containers": [{"env": [{"name": "LINK_CAPACITY", "value": "${ROUTER_LINK_CAPACITY}"},
      {"name": "AUTHENTICATION_SERVICE_HOST", "value": "${AUTHENTICATION_SERVICE_HOST}"},
      {"name": "AUTHENTICATION_SERVICE_PORT", "value": "${AUTHENTICATION_SERVICE_PORT}"},
      {"name": "AUTHENTICATION_SERVICE_CLIENT_SECRET", "value": "${AUTHENTICATION_SERVICE_CLIENT_SECRET}"},
      {"name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST", "value": "${AUTHENTICATION_SERVICE_SASL_INIT_HOST}"}],
      "image": "${ROUTER_REPO}", "livenessProbe": {"initialDelaySeconds": 60, "tcpSocket":
      {"port": "amqp"}}, "name": "router", "ports": [{"containerPort": 5672, "name":
      "amqp", "protocol": "TCP"}, {"containerPort": 5671, "name": "amqps", "protocol":
      "TCP"}, {"containerPort": 55671, "name": "amqps-normal", "protocol": "TCP"},
      {"containerPort": 56671, "name": "amqps-broker", "protocol": "TCP"}], "volumeMounts":
      [{"mountPath": "/etc/qpid-dispatch/ssl", "name": "ssl-certs", "readOnly": true},
      {"mountPath": "/etc/qpid-dispatch/authservice-ca", "name": "authservice-ca",
      "readOnly": true}, {"mountPath": "/etc/enmasse-certs", "name": "router-internal-cert",
      "readOnly": true}, {"mountPath": "/etc/qpid-dispatch/address-controller-ca",
      "name": "address-controller-ca", "readOnly": true}]}, {"env": [{"name": "ROUTER_HOST",
      "value": "127.0.0.1"}, {"name": "ROUTER_PORT", "value": "55671"}, {"name": "CERT_DIR",
      "value": "/etc/enmasse-certs"}], "image": "${ROUTER_METRICS_REPO}", "livenessProbe":
      {"initialDelaySeconds": 60, "tcpSocket": {"port": "metrics"}}, "name": "metrics",
      "ports": [{"containerPort": 8080, "name": "metrics", "protocol": "TCP"}], "resources":
      {"limits": {"memory": "32Mi"}, "requests": {"memory": "32Mi"}}, "volumeMounts":
      [{"mountPath": "/etc/enmasse-certs", "name": "router-internal-cert", "readOnly":
      true}]}], "volumes": [{"configMap": {"name": "hawkular-router-config"}, "name":
      "hawkular-openshift-agent"}, {"name": "ssl-certs", "secret": {"secretName":
      "${MESSAGING_SECRET}"}}, {"name": "authservice-ca", "secret": {"secretName":
      "authservice-ca"}}, {"name": "address-controller-ca", "secret": {"secretName":
      "address-controller-ca"}}, {"name": "router-internal-cert", "secret": {"secretName":
      "router-internal-cert"}}]}}}}, {"apiVersion": "extensions/v1beta1", "kind":
      "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "io.enmasse.certSecretName": "subserv-internal-cert"}, "labels": {"app": "enmasse",
      "name": "subserv"}, "name": "subserv"}, "spec": {"replicas": 1, "template":
      {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"}, "labels":
      {"app": "enmasse", "name": "subserv"}}, "spec": {"containers": [{"image": "${SUBSERV_REPO}",
      "livenessProbe": {"initialDelaySeconds": 60, "tcpSocket": {"port": "amqp"}},
      "name": "subserv", "ports": [{"containerPort": 5672, "name": "amqp", "protocol":
      "TCP"}], "resources": {"limits": {"memory": "64Mi"}, "requests": {"memory":
      "64Mi"}}, "volumeMounts": [{"mountPath": "/etc/enmasse-certs", "name": "subserv-internal-cert",
      "readOnly": true}]}], "volumes": [{"name": "subserv-internal-cert", "secret":
      {"secretName": "subserv-internal-cert"}}]}}}}, {"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse", "name": "mqtt-gateway"}, "name": "mqtt-gateway"},
      "spec": {"replicas": 1, "template": {"metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse", "name": "mqtt-gateway"}},
      "spec": {"containers": [{"env": [{"name": "ENMASSE_MQTT_SSL", "value": "true"},
      {"name": "ENMASSE_MQTT_KEYFILE", "value": "/etc/mqtt-gateway/ssl/tls.key"},
      {"name": "ENMASSE_MQTT_CERTFILE", "value": "/etc/mqtt-gateway/ssl/tls.crt"},
      {"name": "ENMASSE_MQTT_LISTENPORT", "value": "8883"}], "image": "${MQTT_GATEWAY_REPO}",
      "livenessProbe": {"initialDelaySeconds": 60, "tcpSocket": {"port": "secure-mqtt"}},
      "name": "mqtt-gateway-tls", "ports": [{"containerPort": 8883, "name": "secure-mqtt",
      "protocol": "TCP"}], "volumeMounts": [{"mountPath": "/etc/mqtt-gateway/ssl",
      "name": "ssl-certs", "readOnly": true}]}, {"image": "${MQTT_GATEWAY_REPO}",
      "livenessProbe": {"initialDelaySeconds": 60, "tcpSocket": {"port": "mqtt"}},
      "name": "mqtt-gateway", "ports": [{"containerPort": 1883, "name": "mqtt", "protocol":
      "TCP"}]}], "volumes": [{"name": "ssl-certs", "secret": {"secretName": "${MQTT_SECRET}"}}]}}}},
      {"apiVersion": "extensions/v1beta1", "kind": "Deployment", "metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}", "io.enmasse.certSecretName": "mqtt-lwt-internal-cert"},
      "labels": {"app": "enmasse", "name": "mqtt-lwt"}, "name": "mqtt-lwt"}, "spec":
      {"replicas": 1, "template": {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse", "name": "mqtt-lwt"}}, "spec": {"containers": [{"env":
      [{"name": "CERT_DIR", "value": "/etc/enmasse-certs"}, {"name": "MESSAGING_SERVICE_NORMAL_PORT",
      "value": "$(MESSAGING_SERVICE_PORT_AMQPS_NORMAL)"}, {"name": "MESSAGING_SERVICE_ROUTE_CONTAINER_PORT",
      "value": "$(MESSAGING_SERVICE_PORT_AMQPS_BROKER)"}], "image": "${MQTT_LWT_REPO}",
      "name": "mqtt-lwt", "volumeMounts": [{"mountPath": "/etc/enmasse-certs", "name":
      "mqtt-lwt-internal-cert", "readOnly": true}]}], "volumes": [{"name": "mqtt-lwt-internal-cert",
      "secret": {"secretName": "mqtt-lwt-internal-cert"}}]}}}}, {"apiVersion": "v1",
      "data": {"tls.crt": "${AUTHENTICATION_SERVICE_CA_CERT}"}, "kind": "Secret",
      "metadata": {"name": "authservice-ca"}}, {"apiVersion": "v1", "data": {"tls.crt":
      "${ADDRESS_CONTROLLER_CA_CERT}"}, "kind": "Secret", "metadata": {"name": "address-controller-ca"}},
      {"apiVersion": "v1", "data": {"hawkular-openshift-agent": "{\"endpoints\": [{\"collection_interval\":
      \"60s\", \"metrics\": [{\"id\": \"broker.threadCount\", \"name\": \"java.lang:type=Threading#ThreadCount\",
      \"tags\": {\"messagingComponent\": \"broker\", \"messagingMetricType\": \"threadCount\"},
      \"type\": \"counter\"}, {\"id\": \"broker.memoryHeapUsage\", \"name\": \"java.lang:type=Memory#HeapMemoryUsage#used\",
      \"tags\": {\"messagingComponent\": \"broker\", \"messagingMetricType\": \"heapUsage\"},
      \"type\": \"gauge\"}, {\"description\": \"Queue depth for ${address}\", \"id\":
      \"${address}.${queue}.${broker}.queueDepth\", \"name\": \"org.apache.activemq.artemis:address=*,broker=*,component=addresses,queue=*,routing-type=*,subcomponent=queues#MessageCount\",
      \"tags\": {\"messagingAddress\": \"${address}\", \"messagingBroker\": \"{broker}\",
      \"messagingMetricType\": \"queueDepth\", \"messagingQueue\": \"${queue}\"},
      \"type\": \"gauge\"}, {\"description\": \"Number of consumers for ${address}\",
      \"id\": \"${address}.${queue}.${broker}.numConsumers\", \"name\": \"org.apache.activemq.artemis:address=*,broker=*,component=addresses,queue=*,routing-type=*,subcomponent=queues#ConsumerCount\",
      \"tags\": {\"messagingAddress\": \"${address}\", \"messagingBroker\": \"{broker}\",
      \"messagingMetricType\": \"numConsumers\", \"messagingQueue\": \"${queue}\"},
      \"type\": \"gauge\"}], \"path\": \"/jolokia/\", \"port\": 8161, \"protocol\":
      \"http\", \"type\": \"jolokia\"}]}"}, "kind": "ConfigMap", "metadata": {"name":
      "hawkular-broker-config"}}, {"apiVersion": "v1", "data": {"hawkular-openshift-agent":
      "{\"endpoints\": [{\"collection_interval\": \"60s\", \"metrics\": [{\"id\":
      \"router.totalConnectionCount\", \"name\": \"totalConnectionCount\", \"tags\":
      {\"messagingComponent\": \"router\", \"messagingMetricType\": \"totalConnectionCount\"}},
      {\"id\": \"router.totalLinkCount\", \"name\": \"totalLinkCount\", \"tags\":
      {\"messagingComponent\": \"router\", \"messagingMetricType\": \"totalLinkCount\"}},
      {\"id\": \"router.producerCount\", \"name\": \"producerCount\", \"tags\": {\"messagingComponent\":
      \"router\", \"messagingMetricType\": \"producerCount\"}}, {\"id\": \"router.consumerCount\",
      \"name\": \"consumerCount\", \"tags\": {\"messagingComponent\": \"router\",
      \"messagingMetricType\": \"consumerCount\"}}], \"path\": \"/metrics/\", \"port\":
      8080, \"protocol\": \"http\", \"type\": \"prometheus\"}]}"}, "kind": "ConfigMap",
      "metadata": {"name": "hawkular-router-config"}}, {"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "io.enmasse.certSecretName": "admin-internal-cert"}, "labels": {"app": "enmasse",
      "name": "admin"}, "name": "admin"}, "spec": {"replicas": 1, "template": {"metadata":
      {"annotations": {"addressSpace": "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse",
      "name": "admin"}}, "spec": {"containers": [{"env": [{"name": "CONFIGURATION_SERVICE_HOST",
      "value": "localhost"}, {"name": "CONFIGURATION_SERVICE_PORT", "value": "5671"},
      {"name": "CERT_DIR", "value": "/etc/enmasse-certs"}, {"name": "PROBE_PORT",
      "value": "8888"}], "image": "${RAGENT_REPO}", "livenessProbe": {"httpGet": {"path":
      "/", "port": "http", "scheme": "HTTP"}, "initialDelaySeconds": 60}, "name":
      "ragent", "ports": [{"containerPort": 55671, "name": "amqp", "protocol": "TCP"},
      {"containerPort": 8888, "name": "http", "protocol": "TCP"}], "resources": {"limits":
      {"memory": "64Mi"}, "requests": {"memory": "64Mi"}}, "volumeMounts": [{"mountPath":
      "/etc/enmasse-certs", "name": "admin-internal-cert", "readOnly": true}]}, {"env":
      [{"name": "CONFIGURATION_SERVICE_HOST", "value": "localhost"}, {"name": "CONFIGURATION_SERVICE_PORT",
      "value": "5671"}, {"name": "LISTEN_PORT", "value": "55667"}, {"name": "CERT_DIR",
      "value": "/etc/enmasse-certs"}], "image": "${QUEUE_SCHEDULER_REPO}", "livenessProbe":
      {"initialDelaySeconds": 60, "tcpSocket": {"port": "amqp"}}, "name": "queue-scheduler",
      "ports": [{"containerPort": 55667, "name": "amqp", "protocol": "TCP"}], "resources":
      {"limits": {"memory": "128Mi"}, "requests": {"memory": "128Mi"}}, "volumeMounts":
      [{"mountPath": "/etc/enmasse-certs", "name": "admin-internal-cert", "readOnly":
      true}]}, {"env": [{"name": "CONFIGURATION_SERVICE_HOST", "value": "localhost"},
      {"name": "CONFIGURATION_SERVICE_PORT", "value": "5671"}, {"name": "ADDRESS_SPACE_SERVICE_HOST",
      "value": "${ADDRESS_SPACE_SERVICE_HOST}"}, {"name": "ADDRESS_SPACE", "value":
      "${ADDRESS_SPACE}"}, {"name": "ADDRESS_CONTROLLER_CA", "value": "/opt/agent/address-controller-ca/tls.crt"},
      {"name": "MESSAGING_CERT", "value": "/opt/agent/messaging-cert/tls.crt"}, {"name":
      "AUTHENTICATION_SERVICE_HOST", "value": "${AUTHENTICATION_SERVICE_HOST}"}, {"name":
      "AUTHENTICATION_SERVICE_PORT", "value": "${AUTHENTICATION_SERVICE_PORT}"}, {"name":
      "AUTHENTICATION_SERVICE_CLIENT_SECRET", "value": "${AUTHENTICATION_SERVICE_CLIENT_SECRET}"},
      {"name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST", "value": "${AUTHENTICATION_SERVICE_SASL_INIT_HOST}"}],
      "image": "${AGENT_IMAGE}", "livenessProbe": {"httpGet": {"path": "/probe", "port":
      "https", "scheme": "HTTPS"}}, "name": "agent", "ports": [{"containerPort": 8080,
      "name": "https"}, {"containerPort": 56720, "name": "amqp-ws"}], "readinessProbe":
      {"httpGet": {"path": "/probe", "port": "https", "scheme": "HTTPS"}}, "resources":
      {"limits": {"memory": "128Mi"}, "requests": {"memory": "128Mi"}}, "volumeMounts":
      [{"mountPath": "/etc/console-certs", "name": "console-secret", "readOnly": true},
      {"mountPath": "/opt/agent/authservice-ca", "name": "authservice-ca", "readOnly":
      true}, {"mountPath": "/etc/enmasse-certs", "name": "admin-internal-cert", "readOnly":
      true}, {"mountPath": "/opt/agent/address-controller-ca", "name": "address-controller-ca",
      "readOnly": true}, {"mountPath": "/opt/agent/messaging-cert", "name": "messaging-cert",
      "readOnly": true}]}, {"env": [{"name": "CERT_DIR", "value": "/etc/enmasse-certs"}],
      "image": "${CONFIGSERV_REPO}", "livenessProbe": {"initialDelaySeconds": 60,
      "tcpSocket": {"port": "amqps"}}, "name": "configserv", "ports": [{"containerPort":
      5671, "name": "amqps", "protocol": "TCP"}], "resources": {"limits": {"memory":
      "256Mi"}, "requests": {"memory": "256Mi"}}, "volumeMounts": [{"mountPath": "/etc/enmasse-certs",
      "name": "admin-internal-cert", "readOnly": true}]}], "volumes": [{"name": "console-secret",
      "secret": {"secretName": "${CONSOLE_SECRET}"}}, {"name": "authservice-ca", "secret":
      {"secretName": "authservice-ca"}}, {"name": "address-controller-ca", "secret":
      {"secretName": "address-controller-ca"}}, {"name": "admin-internal-cert", "secret":
      {"secretName": "admin-internal-cert"}}, {"name": "messaging-cert", "secret":
      {"secretName": "${MESSAGING_SECRET}"}}]}}}}], "parameters": [{"description":
      "Hostname where API server can be reached", "name": "ADDRESS_SPACE_SERVICE_HOST",
      "value": ""}, {"description": "The image to use for the router", "name": "ROUTER_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-interconnect-openshift:dev"},
      {"description": "The image to use for the router metrics collector", "name":
      "ROUTER_METRICS_REPO", "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-routermetrics-openshift:dev"},
      {"description": "The link capacity setting for router", "name": "ROUTER_LINK_CAPACITY",
      "value": "50"}, {"description": "The image to use for the configuration service",
      "name": "CONFIGSERV_REPO", "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-configserv-openshift:dev"},
      {"description": "The docker image to use for the queue scheduler", "name": "QUEUE_SCHEDULER_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-queuescheduler-openshift:dev"},
      {"description": "The image to use for the router agent", "name": "RAGENT_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-routeragent-openshift:dev"},
      {"description": "The image to use for the subscription services", "name": "SUBSERV_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-subscriptionservice-openshift:dev"},
      {"description": "The image to use for the enmasse agent", "name": "AGENT_IMAGE",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-agent-openshift:dev"},
      {"description": "The hostname to use for the exposed route for messaging", "name":
      "MESSAGING_HOSTNAME"}, {"description": "The image to use for the MQTT gateway",
      "name": "MQTT_GATEWAY_REPO", "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-mqttgateway-openshift:dev"},
      {"description": "The hostname to use for the exposed route for MQTT", "name":
      "MQTT_GATEWAY_HOSTNAME"}, {"description": "The hostname to use for the exposed
      route for the messaging console", "name": "CONSOLE_HOSTNAME"}, {"description":
      "The secret with cert for the console", "name": "CONSOLE_SECRET", "required":
      true}, {"description": "The secret with cert for the messaging service", "name":
      "MESSAGING_SECRET", "required": true}, {"description": "The secret to mount
      for MQTT private key and certificate", "name": "MQTT_SECRET", "required": true},
      {"description": "The image to use for the MQTT LWT", "name": "MQTT_LWT_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-mqttlwt-openshift:dev"},
      {"description": "The address space this infrastructure is deployed for", "name":
      "ADDRESS_SPACE", "required": true}, {"description": "The hostname of the authentication
      service used by this address space", "name": "AUTHENTICATION_SERVICE_HOST",
      "required": true}, {"description": "The port of the authentication service used
      by this address space", "name": "AUTHENTICATION_SERVICE_PORT", "required": true},
      {"description": "The CA cert to use for validating authentication service cert",
      "name": "AUTHENTICATION_SERVICE_CA_CERT", "required": true}, {"description":
      "The client cert to use as identity against authentication service", "name":
      "AUTHENTICATION_SERVICE_CLIENT_SECRET"}, {"description": "The hostname to use
      in sasl init", "name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST"}, {"description":
      "The CA cert to use for validating address controller identity", "name": "ADDRESS_CONTROLLER_CA_CERT"},
      {"description": "The image to use for the AMQP Kafka Bridge", "name": "AMQP_KAFKA_BRIDGE_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-amqp-kafka-bridge-openshift:dev"},
      {"description": "A list of host/port pairs to use for establishing the initial
      connection to the Kafka cluster", "name": "KAFKA_BOOTSTRAP_SERVERS"}, {"description":
      "The service account with address space admin privileges", "name": "ADDRESS_SPACE_ADMIN_SA",
      "value": "address-space-admin"}]}'
    topic-inmemory.json: '{"apiVersion": "v1", "kind": "Template", "metadata": {"labels":
      {"app": "enmasse"}, "name": "topic-inmemory"}, "objects": [{"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "cluster_id": "${CLUSTER_ID}", "io.enmasse.certSecretName": "broker-internal-cert"},
      "labels": {"app": "enmasse"}, "name": "${NAME}"}, "spec": {"replicas": 1, "template":
      {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}", "cluster_id":
      "${CLUSTER_ID}"}, "labels": {"app": "enmasse", "name": "${NAME}", "role": "broker"}},
      "spec": {"containers": [{"env": [{"name": "TOPIC_NAME", "value": "${ADDRESS}"},
      {"name": "CLUSTER_ID", "value": "${CLUSTER_ID}"}, {"name": "CERT_DIR", "value":
      "/etc/enmasse-certs"}], "image": "${BROKER_REPO}", "lifecycle": {"preStop":
      {"exec": {"command": ["/shutdown-hook/shutdown-hook.sh"]}}}, "livenessProbe":
      {"exec": {"command": ["sh", "-c", "$ARTEMIS_HOME/bin/probe.sh"]}, "initialDelaySeconds":
      120}, "name": "broker", "ports": [{"containerPort": 5673, "name": "amqp"}, {"containerPort":
      8161, "name": "jolokia"}], "readinessProbe": {"exec": {"command": ["sh", "-c",
      "$ARTEMIS_HOME/bin/probe.sh"]}, "initialDelaySeconds": 10}, "volumeMounts":
      [{"mountPath": "/var/run/artemis", "name": "vol-${NAME}", "readOnly": false},
      {"mountPath": "/etc/enmasse-certs", "name": "broker-internal-cert", "readOnly":
      true}, {"mountPath": "/etc/authservice-ca", "name": "authservice-ca", "readOnly":
      true}]}, {"env": [{"name": "TOPIC_NAME", "value": "${ADDRESS}"}, {"name": "LINK_CAPACITY",
      "value": "${ROUTER_LINK_CAPACITY}"}, {"name": "AUTHENTICATION_SERVICE_HOST",
      "value": "${AUTHENTICATION_SERVICE_HOST}"}, {"name": "AUTHENTICATION_SERVICE_PORT",
      "value": "${AUTHENTICATION_SERVICE_PORT}"}, {"name": "AUTHENTICATION_SERVICE_CLIENT_SECRET",
      "value": "${AUTHENTICATION_SERVICE_CLIENT_SECRET}"}, {"name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST",
      "value": "${AUTHENTICATION_SERVICE_SASL_INIT_HOST}"}], "image": "${ROUTER_REPO}",
      "livenessProbe": {"initialDelaySeconds": 60, "tcpSocket": {"port": "amqp"}},
      "name": "router", "ports": [{"containerPort": 5672, "name": "amqp", "protocol":
      "TCP"}, {"containerPort": 5671, "name": "amqps", "protocol": "TCP"}, {"containerPort":
      55671, "name": "amqps-normal", "protocol": "TCP"}, {"containerPort": 56671,
      "name": "amqps-broker", "protocol": "TCP"}], "resources": {"limits": {"memory":
      "256Mi"}, "requests": {"memory": "256Mi"}}, "volumeMounts": [{"mountPath": "/etc/qpid-dispatch/ssl",
      "name": "ssl-certs", "readOnly": true}, {"mountPath": "/etc/qpid-dispatch/authservice-ca",
      "name": "authservice-ca", "readOnly": true}, {"mountPath": "/etc/enmasse-certs",
      "name": "broker-internal-cert", "readOnly": true}, {"mountPath": "/etc/qpid-dispatch/address-controller-ca",
      "name": "address-controller-ca", "readOnly": true}]}, {"env": [{"name": "TOPIC_NAME",
      "value": "${ADDRESS}"}, {"name": "CLUSTER_ID", "value": "${NAME}"}, {"name":
      "CERT_DIR", "value": "/etc/enmasse-certs"}], "image": "${TOPIC_FORWARDER_REPO}",
      "livenessProbe": {"httpGet": {"path": "/health", "port": "health"}, "initialDelaySeconds":
      60}, "name": "forwarder", "ports": [{"containerPort": 8080, "name": "health"}],
      "resources": {"limits": {"memory": "128Mi"}, "requests": {"memory": "128Mi"}},
      "volumeMounts": [{"mountPath": "/etc/enmasse-certs", "name": "broker-internal-cert",
      "readOnly": true}]}], "volumes": [{"emptyDir": { }, "name": "vol-${NAME}"},
      {"name": "ssl-certs", "secret": {"secretName": "${COLOCATED_ROUTER_SECRET}"}},
      {"name": "authservice-ca", "secret": {"secretName": "authservice-ca"}}, {"name":
      "address-controller-ca", "secret": {"secretName": "address-controller-ca"}},
      {"name": "broker-internal-cert", "secret": {"secretName": "broker-internal-cert"}},
      {"configMap": {"name": "hawkular-broker-config"}, "name": "hawkular-openshift-agent"}]}}}}],
      "parameters": [{"description": "Storage capacity required for volume claims",
      "name": "STORAGE_CAPACITY", "value": "2Gi"}, {"description": "The docker image
      to use for the message broker", "name": "BROKER_REPO", "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-broker-openshift:dev"},
      {"description": "The default image to use as topic forwarder", "name": "TOPIC_FORWARDER_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-topicforwarder-openshift:dev"},
      {"description": "The image to use for the router", "name": "ROUTER_REPO", "value":
      "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-interconnect-openshift:dev"},
      {"description": "The link capacity setting for router", "name": "ROUTER_LINK_CAPACITY",
      "value": "50"}, {"description": "A valid addressSpace name for the address Space",
      "name": "ADDRESS_SPACE", "required": true}, {"description": "A valid name for
      the deployment", "name": "NAME", "required": true}, {"description": "A valid
      group id for the deployment", "name": "CLUSTER_ID", "required": true}, {"description":
      "The address to use for the topic", "name": "ADDRESS", "value": ""}, {"description":
      "Name of secret containing router key and certificate", "name": "COLOCATED_ROUTER_SECRET",
      "required": true}, {"description": "The hostname of the authentication service
      used by this address space", "name": "AUTHENTICATION_SERVICE_HOST", "required":
      true}, {"description": "The port of the authentication service used by this
      address space", "name": "AUTHENTICATION_SERVICE_PORT", "required": true}, {"description":
      "The CA cert to use for validating authentication service cert", "name": "AUTHENTICATION_SERVICE_CA_CERT",
      "required": true}, {"description": "The client cert to use as identity against
      authentication service", "name": "AUTHENTICATION_SERVICE_CLIENT_SECRET"}, {"description":
      "The hostname to use in sasl init", "name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST"}]}'
    topic-persisted.json: '{"apiVersion": "v1", "kind": "Template", "metadata": {"labels":
      {"app": "enmasse"}, "name": "topic-persisted"}, "objects": [{"apiVersion": "v1",
      "kind": "PersistentVolumeClaim", "metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse"},
      "name": "pvc-${NAME}"}, "spec": {"accessModes": ["ReadWriteMany"], "resources":
      {"requests": {"storage": "${STORAGE_CAPACITY}"}}}}, {"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "cluster_id": "${CLUSTER_ID}", "io.enmasse.certSecretName": "broker-internal-cert"},
      "labels": {"app": "enmasse"}, "name": "${NAME}"}, "spec": {"replicas": 1, "template":
      {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}", "cluster_id":
      "${CLUSTER_ID}"}, "labels": {"app": "enmasse", "name": "${NAME}", "role": "broker"}},
      "spec": {"containers": [{"env": [{"name": "TOPIC_NAME", "value": "${ADDRESS}"},
      {"name": "CLUSTER_ID", "value": "${CLUSTER_ID}"}, {"name": "CERT_DIR", "value":
      "/etc/enmasse-certs"}], "image": "${BROKER_REPO}", "lifecycle": {"preStop":
      {"exec": {"command": ["/shutdown-hook/shutdown-hook.sh"]}}}, "livenessProbe":
      {"exec": {"command": ["sh", "-c", "$ARTEMIS_HOME/bin/probe.sh"]}, "initialDelaySeconds":
      120}, "name": "broker", "ports": [{"containerPort": 5673, "name": "amqp"}, {"containerPort":
      8161, "name": "jolokia"}], "readinessProbe": {"exec": {"command": ["sh", "-c",
      "$ARTEMIS_HOME/bin/probe.sh"]}, "initialDelaySeconds": 10}, "volumeMounts":
      [{"mountPath": "/var/run/artemis", "name": "vol-${NAME}", "readOnly": false},
      {"mountPath": "/etc/enmasse-certs", "name": "broker-internal-cert", "readOnly":
      true}, {"mountPath": "/etc/authservice-ca", "name": "authservice-ca", "readOnly":
      true}]}, {"env": [{"name": "TOPIC_NAME", "value": "${ADDRESS}"}, {"name": "LINK_CAPACITY",
      "value": "${ROUTER_LINK_CAPACITY}"}, {"name": "AUTHENTICATION_SERVICE_HOST",
      "value": "${AUTHENTICATION_SERVICE_HOST}"}, {"name": "AUTHENTICATION_SERVICE_PORT",
      "value": "${AUTHENTICATION_SERVICE_PORT}"}, {"name": "AUTHENTICATION_SERVICE_CLIENT_SECRET",
      "value": "${AUTHENTICATION_SERVICE_CLIENT_SECRET}"}, {"name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST",
      "value": "${AUTHENTICATION_SERVICE_SASL_INIT_HOST}"}], "image": "${ROUTER_REPO}",
      "livenessProbe": {"initialDelaySeconds": 60, "tcpSocket": {"port": "amqp"}},
      "name": "router", "ports": [{"containerPort": 5672, "name": "amqp", "protocol":
      "TCP"}, {"containerPort": 5671, "name": "amqps", "protocol": "TCP"}, {"containerPort":
      55671, "name": "amqps-normal", "protocol": "TCP"}, {"containerPort": 56671,
      "name": "amqps-broker", "protocol": "TCP"}], "resources": {"limits": {"memory":
      "256Mi"}, "requests": {"memory": "256Mi"}}, "volumeMounts": [{"mountPath": "/etc/qpid-dispatch/ssl",
      "name": "ssl-certs", "readOnly": true}, {"mountPath": "/etc/qpid-dispatch/authservice-ca",
      "name": "authservice-ca", "readOnly": true}, {"mountPath": "/etc/enmasse-certs",
      "name": "broker-internal-cert", "readOnly": true}, {"mountPath": "/etc/qpid-dispatch/address-controller-ca",
      "name": "address-controller-ca", "readOnly": true}]}, {"env": [{"name": "TOPIC_NAME",
      "value": "${ADDRESS}"}, {"name": "CLUSTER_ID", "value": "${NAME}"}, {"name":
      "CERT_DIR", "value": "/etc/enmasse-certs"}], "image": "${TOPIC_FORWARDER_REPO}",
      "livenessProbe": {"httpGet": {"path": "/health", "port": "health"}, "initialDelaySeconds":
      60}, "name": "forwarder", "ports": [{"containerPort": 8080, "name": "health"}],
      "resources": {"limits": {"memory": "128Mi"}, "requests": {"memory": "128Mi"}},
      "volumeMounts": [{"mountPath": "/etc/enmasse-certs", "name": "broker-internal-cert",
      "readOnly": true}]}], "volumes": [{"name": "vol-${NAME}", "persistentVolumeClaim":
      {"claimName": "pvc-${NAME}"}}, {"name": "ssl-certs", "secret": {"secretName":
      "${COLOCATED_ROUTER_SECRET}"}}, {"name": "authservice-ca", "secret": {"secretName":
      "authservice-ca"}}, {"name": "address-controller-ca", "secret": {"secretName":
      "address-controller-ca"}}, {"name": "broker-internal-cert", "secret": {"secretName":
      "broker-internal-cert"}}, {"configMap": {"name": "hawkular-broker-config"},
      "name": "hawkular-openshift-agent"}]}}}}], "parameters": [{"description": "Storage
      capacity required for volume claims", "name": "STORAGE_CAPACITY", "value": "2Gi"},
      {"description": "The docker image to use for the message broker", "name": "BROKER_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-broker-openshift:dev"},
      {"description": "The default image to use as topic forwarder", "name": "TOPIC_FORWARDER_REPO",
      "value": "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-topicforwarder-openshift:dev"},
      {"description": "The image to use for the router", "name": "ROUTER_REPO", "value":
      "docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-interconnect-openshift:dev"},
      {"description": "The link capacity setting for router", "name": "ROUTER_LINK_CAPACITY",
      "value": "50"}, {"description": "A valid addressSpace name for the address Space",
      "name": "ADDRESS_SPACE", "required": true}, {"description": "A valid name for
      the deployment", "name": "NAME", "required": true}, {"description": "A valid
      group id for the deployment", "name": "CLUSTER_ID", "required": true}, {"description":
      "The address to use for the topic", "name": "ADDRESS", "value": ""}, {"description":
      "Name of secret containing router key and certificate", "name": "COLOCATED_ROUTER_SECRET",
      "required": true}, {"description": "The hostname of the authentication service
      used by this address space", "name": "AUTHENTICATION_SERVICE_HOST", "required":
      true}, {"description": "The port of the authentication service used by this
      address space", "name": "AUTHENTICATION_SERVICE_PORT", "required": true}, {"description":
      "The CA cert to use for validating authentication service cert", "name": "AUTHENTICATION_SERVICE_CA_CERT",
      "required": true}, {"description": "The client cert to use as identity against
      authentication service", "name": "AUTHENTICATION_SERVICE_CLIENT_SECRET"}, {"description":
      "The hostname to use in sasl init", "name": "AUTHENTICATION_SERVICE_SASL_INIT_HOST"}]}'
  kind: ConfigMap
  metadata:
    labels:
      app: enmasse
    name: enmasse-template-config
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
      environment: development
      name: address-controller
    name: address-controller
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: enmasse
          environment: development
          name: address-controller
      spec:
        containers:
        - env:
          - name: ENABLE_RBAC
            value: 'false'
          - name: ENVIRONMENT
            value: development
          - name: ADDRESS_CONTROLLER_SA
            value: enmasse-admin
          - name: ADDRESS_SPACE_ADMIN_SA
            value: address-space-admin
          image: docker-registry.engineering.redhat.com/jboss-amqmaas-1/amqmaas10-addresscontroller-openshift:dev
          livenessProbe:
            httpGet:
              path: /apis/enmasse.io/v1/health
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
          name: address-controller
          ports:
          - containerPort: 8081
            name: https
          - containerPort: 8080
            name: http
          readinessProbe:
            httpGet:
              path: /apis/enmasse.io/v1/health
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
          resources:
            limits:
              memory: 512Mi
            requests:
              memory: 512Mi
          volumeMounts:
          - mountPath: /address-controller-cert
            name: address-controller-cert
            readOnly: true
          - mountPath: /enmasse-templates
            name: templates
            readOnly: false
        serviceAccount: enmasse-admin
        volumes:
        - name: address-controller-cert
          secret:
            secretName: address-controller-cert
        - configMap:
            name: enmasse-template-config
          name: templates
- apiVersion: v1
  kind: Service
  metadata:
    annotations: {}
    labels:
      app: enmasse
    name: address-controller
  spec:
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      name: address-controller
    type: ClusterIP
kind: List
